# app/config.py - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª
import os
from dotenv import load_dotenv

def load_environment():
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    
    # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: .env.development -> .env -> –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
    if os.path.exists('.env.development'):
        load_dotenv('.env.development')
        print("üîß –ó–∞–≥—Ä—É–∂–µ–Ω .env.development (–ª–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)")
    elif os.path.exists('.env'):
        load_dotenv('.env')
        print("üìÑ –ó–∞–≥—Ä—É–∂–µ–Ω .env (template)")
    else:
        print("‚òÅÔ∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (GitHub Actions)")

class Config:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    def __init__(self):
        load_environment()
        
        # –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        self.BOT_TOKEN = self._get_required("BOT_TOKEN")
        self.DATABASE_URL = self._get_required("DATABASE_URL")
        
        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å defaults
        self.REDIS_URL = os.getenv("REDIS_URL", "redis://localhost:6379/0")
        self.ENV = os.getenv("ENV", "development")
        self.AI_PROVIDER = os.getenv("AI_PROVIDER", "yandex")
        
        # AI –∫–ª—é—á–∏
        self.YANDEX_GPT_API_KEY = os.getenv("YANDEX_GPT_API_KEY")
        
        # –ö–∞–Ω–∞–ª—ã
        self.FLORIST_CHANNEL_ID = os.getenv("FLORIST_CHANNEL_ID")
        self.ARCHIVE_CHANNEL_ID = os.getenv("ARCHIVE_CHANNEL_ID")
        
        # Webhook
        self.WEBHOOK_URL = os.getenv("WEBHOOK_URL")
    
    def _get_required(self, key: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é"""
        value = os.getenv(key)
        if not value:
            raise ValueError(f"–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è {key} –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞")
        return value
    
    def is_development(self) -> bool:
        return self.ENV == "development"
    
    def validate(self):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        if self.is_development():
            print("üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
        else:
            print("üöÄ –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ AI
        if not self.YANDEX_GPT_API_KEY:
            print("‚ö†Ô∏è YANDEX_GPT_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
config = Config()

# –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞
settings = config
