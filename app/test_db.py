# test_db.py - —Ç–µ—Å—Ç –ë–î –∏ –º–æ–¥–µ–ª–µ–π
import asyncio
from app.database import init_db, get_session
from app.models import User, RoleEnum, Settings

async def test_database():
    """–¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ Telegram"""
    
    try:
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î...")
        await init_db()
        print("‚úÖ –ë–î –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        async for session in get_session():
            # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            print("üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
            user = User(
                tg_id="12345",
                first_name="Test User",
                lang="ru",
                role=RoleEnum.client
            )
            session.add(user)
            await session.commit()
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
            
            # –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
            print("‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
            from sqlalchemy import select
            result = await session.execute(select(Settings))
            settings = result.scalars().all()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(settings)} –Ω–∞—Å—Ç—Ä–æ–µ–∫")
            
            for setting in settings:
                print(f"  {setting.key} = {setting.value}")
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ë–î –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ë–î: {e}")

if __name__ == "__main__":
    asyncio.run(test_database())