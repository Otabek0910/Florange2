from typing import Any, Awaitable, Callable, Dict
from aiogram import BaseMiddleware
from aiogram.types import Update, User as TgUser

from app.database.database import get_session
from app.services.user_service import UserService

class AuthMiddleware(BaseMiddleware):
    """Middleware –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ñ–ª–æ—Ä–∏—Å—Ç–æ–≤"""
    
    async def __call__(
        self,
        handler: Callable[[Update, Dict[str, Any]], Awaitable[Any]],
        event: Update,
        data: Dict[str, Any]
    ) -> Any:
        """–î–æ–±–∞–≤–ª—è–µ—Ç user_service –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç + –æ–±–Ω–æ–≤–ª—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ñ–ª–æ—Ä–∏—Å—Ç–æ–≤"""
        user: TgUser = data.get("event_from_user")
        if not user:
            return await handler(event, data)
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è middleware
        async for session in get_session():
            user_service = UserService(session)
            
            try:
                # –¢–û–õ–¨–ö–û –∏—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ù–ï –°–û–ó–î–ê–ï–ú
                app_user = await user_service.user_repo.get_by_tg_id(str(user.id))
                
                # üÜï –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ñ–ª–æ—Ä–∏—Å—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                if app_user and app_user.role.value in ['florist', 'owner']:
                    await self._update_florist_activity(app_user.id, session)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
                data["user"] = app_user  # None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
                data["user_service"] = user_service
                data["session"] = session
                data["tg_user"] = user  # –î–æ–±–∞–≤–ª—è–µ–º Telegram –¥–∞–Ω–Ω—ã–µ
                
            except Exception as e:
                # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                print(f"AuthMiddleware error: {e}")
                data["user"] = None
                data["user_service"] = user_service
                data["session"] = session
                data["tg_user"] = user
            
            return await handler(event, data)
    
    async def _update_florist_activity(self, user_id: int, session):
        """–û–±–Ω–æ–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ñ–ª–æ—Ä–∏—Å—Ç–∞"""
        try:
            from app.services import FloristService
            florist_service = FloristService(session)
            await florist_service.update_activity(user_id)
            await session.commit()
        except Exception as e:
            print(f"Error updating florist activity: {e}")
            # –ù–µ –ø–∞–¥–∞–µ–º, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å