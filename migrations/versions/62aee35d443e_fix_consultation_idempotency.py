"""fix_consultation_idempotency

Revision ID: 62aee35d443e
Revises: 975786b7d89a
Create Date: 2025-08-18 15:06:24.573467

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '62aee35d443e'
down_revision: Union[str, Sequence[str], None] = '975786b7d89a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å + –∑–∞—â–∏—Ç–∞ –æ—Ç –≥–æ–Ω–æ–∫"""
    
    # 1. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    print("üîß –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è request_key –∏ expires_at...")
    op.add_column('consultations', sa.Column('request_key', sa.String(100), nullable=True))
    op.add_column('consultations', sa.Column('expires_at', sa.DateTime(), nullable=True))
    
    # 2. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    print("üîß –î–æ–±–∞–≤–ª—è–µ–º enum 'expired' –≤ ConsultationStatusEnum...")
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ enum
    op.execute("ALTER TYPE consultationstatusenum ADD VALUE IF NOT EXISTS 'expired'")
    
    # 3. –°–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–µ–π
    print("üîß –°–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã...")
    
    # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è request_key (–∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å)
    op.create_index(
        'idx_consultations_request_key_unique', 
        'consultations', 
        ['request_key'],
        unique=True,
        postgresql_where="request_key IS NOT NULL"
    )
    
    # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å: –æ–¥–∏–Ω –∫–ª–∏–µ–Ω—Ç = –æ–¥–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è/pending –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
    op.create_index(
        'idx_consultations_active_client_unique',
        'consultations',
        ['client_id'],
        unique=True,
        postgresql_where="status IN ('active', 'pending')"
    )
    
    # 4. –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    print("üîß –°–æ–∑–¥–∞—ë–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...")
    
    # –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∑–∞–Ω—è—Ç—ã—Ö —Ñ–ª–æ—Ä–∏—Å—Ç–æ–≤
    op.create_index(
        'idx_consultations_florist_status',
        'consultations',
        ['florist_id', 'status'],
        postgresql_where="status IN ('active', 'pending')"
    )
    
    # –ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç—ë–∫—à–∏—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π
    op.create_index(
        'idx_consultations_expires_at',
        'consultations',
        ['expires_at'],
        postgresql_where="expires_at IS NOT NULL AND status = 'pending'"
    )
    
    # 5. –ó–∞–ø–æ–ª–Ω—è–µ–º expires_at –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö pending –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π
    print("üîß –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ pending –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏...")
    op.execute("""
        UPDATE consultations 
        SET expires_at = created_at + INTERVAL '15 minutes'
        WHERE status = 'pending' AND expires_at IS NULL
    """)
    
    # 6. –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç—ë–∫—à–∏—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π
    print("üîß –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é cleanup_expired_consultations...")
    op.execute("""
        CREATE OR REPLACE FUNCTION cleanup_expired_consultations() 
        RETURNS INTEGER AS $$
        DECLARE
            updated_count INTEGER;
        BEGIN
            UPDATE consultations 
            SET status = 'expired'::consultationstatusenum
            WHERE status = 'pending'::consultationstatusenum 
            AND expires_at < NOW();
            
            GET DIAGNOSTICS updated_count = ROW_COUNT;
            
            -- –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            IF updated_count > 0 THEN
                RAISE NOTICE 'Expired % consultations', updated_count;
            END IF;
            
            RETURN updated_count;
        END;
        $$ LANGUAGE plpgsql;
    """)
    
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!")


def downgrade() -> None:
    """–û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π (–æ–±—Ä–∞—Ç–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è)"""
    
    print("‚è™ –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π...")
    
    # 1. –£–¥–∞–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    op.execute("DROP FUNCTION IF EXISTS cleanup_expired_consultations()")
    
    # 2. –£–¥–∞–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    op.drop_index('idx_consultations_expires_at', table_name='consultations')
    op.drop_index('idx_consultations_florist_status', table_name='consultations')
    op.drop_index('idx_consultations_active_client_unique', table_name='consultations')
    op.drop_index('idx_consultations_request_key_unique', table_name='consultations')
    
    # 3. –£–¥–∞–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏
    op.drop_column('consultations', 'expires_at')
    op.drop_column('consultations', 'request_key')
    
    # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: enum 'expired' –æ—Å—Ç–∞–≤–ª—è–µ–º, —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–µ–µ
    # –∏ –º–æ–∂–µ—Ç —Å–ª–æ–º–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    
    print("‚úÖ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!")